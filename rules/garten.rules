var Timer Rasensprenger_timer = null	

rule "Rasen bewaessern"
when
    Item Bewaessern changed
then
        Rasensprenger_timer?.cancel // the ? will skip this line if timer is null
	logInfo("Bewässern","Status ist " +LichterDimmen.state.toString)
        switch Bewaessern.state.toString {
            case "ON": {
		sendCommand(Rasensprenger, ON)
                Rasensprenger_timer = createTimer(now.plusMinutes(30), [| 
                    sendCommand(Rasensprenger, OFF) 
		    postUpdate(Bewaessern, OFF)
                ])
            }
            case "OFF": {
		Rasensprenger_timer.cancel()                
		sendCommand(Rasensprenger, OFF)
            }
        }
end

rule "check Bewaesserung"
when
	Time cron "0 0 7 * * ?" or
	Time cron "0 0 19 * * ?"
then
	logInfo("Bewässerung","Regel feuert")
	if(RegenReicht.state.toString == "OFF") {
		logInfo("Bewässerung","Regen Reicht nicht")
		sendCommand(Bewaessern, ON)
	}
end


rule "Rasensprenger bleibt aus"
    when
    	Item Rain changed or
    	Item Weather_Today_Icon changed or
    	Item Weather_Tomorrow_Icon changed
    then
        // the rainfall threshold where we shutdown off irrigation
        var rainThreshold = 1
    
    	// check for any rain in the last 24 hours
        var rainInLast24Hours = Rain.maximumSince(now.minusHours(24), "rrd4j")
    	
    	// default to the current rain value in case there is nothing in our history
    	var rain = Rain.state
    	
        if (rainInLast24Hours !== null)
        	rain = rainInLast24Hours.state
        	
        // check if any rain is forecast
        var rainToday = Weather_Today_Icon.state == "chanceflurries" ||
        				Weather_Today_Icon.state == "chancerain" ||
        				Weather_Today_Icon.state == "chancesleet" ||
        				Weather_Today_Icon.state == "chancesnow" ||
        				Weather_Today_Icon.state == "chancetstorms" ||
        				Weather_Today_Icon.state == "flurries" ||    				
        				Weather_Today_Icon.state == "rain" || 
        				Weather_Today_Icon.state == "sleet" ||
        				Weather_Today_Icon.state == "snow" ||
        				Weather_Today_Icon.state == "tstorms"
        				
        var rainTomorrow = Weather_Tomorrow_Icon.state == "chanceflurries" ||
        				   Weather_Tomorrow_Icon.state == "chancerain" ||
        				   Weather_Tomorrow_Icon.state == "chancesleet" ||
        				   Weather_Tomorrow_Icon.state == "chancesnow" ||
        				   Weather_Tomorrow_Icon.state == "chancetstorms" ||
        				   Weather_Tomorrow_Icon.state == "flurries" ||
        				   Weather_Tomorrow_Icon.state == "rain" || 
        				   Weather_Tomorrow_Icon.state == "sleet" ||
        				   Weather_Tomorrow_Icon.state == "snow" ||
        				   Weather_Tomorrow_Icon.state == "tstorms"
           	
    	// shutoff irrigation if there has been rain or rain is forecast
        var logMessage = ""
    	if (rain > rainThreshold) {
    	    logMessage = "In den letzten 24 Stunden hat es  (" + rain + " mm) geregnet! - Rasen nicht bewässern!"
    	} else if (rainToday) {
    	    logMessage = "Heute soll es regnen - Rasen nicht bewässern!"
    	} else if (rainTomorrow) {
    		logMessage = "Morgen soll es regnen - Rasen nicht bewässern!"
    	}
    	
    	if (logMessage != "") {
    		if (RegenReicht.state == OFF) {
            	logInfo("Rasensprenger", logMessage)
    			sendCommand(RegenReicht, ON)
    		}
    	} else {
    		if (RegenReicht.state == ON) {
    	        	logInfo("Rasensprenger", "Kein Regen in den letzten 24 Stunden und auch keiner ein Aussicht - Rasen bewässern!")
    			sendCommand(RegenReicht, OFF)
    		}
    	}
    end
