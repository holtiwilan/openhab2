//rule "Check Life360 locations"
//when
//        Time cron "0 */2 * * * ? *" // every 2 minutes
//then
//        executeCommandLine('bash /etc/openhab2/scripts/life360.sh', 3*1000)
//end

rule "Tim angekommen"
when
    Item LocationTim_i360 changed
then
    if (LocationTim_i360.state == "unterwegs") {
	    logInfo("Life360","Tim ist unterwegs")
        sendCommand(AnwesenheitTim, OFF)
    } else if (LocationTim_i360.state == "Wohnort") {
        logInfo("Life360","Tim ist "+ LocationTim_i360.state)
        //sendTelegram("bot1", "Tim ist zuhause sagt Life360")
	    sendCommand(AnwesenheitTim, ON)
	} else {
        logInfo("Life360","Tim ist hier angekommen: "+ LocationTim_i360.state)
        //sendTelegram("bot1", "Tim ist hier angekommen: "+ LocationTim_i360.state)
        sendCommand(AnwesenheitTim, OFF)
    }
    
end

rule "Sandra angekommen"
when
    Item LocationSandra_i360 changed
then
    if (LocationSandra_i360.state == "unterwegs") {
	    logInfo("Life360","Sandra ist unterwegs")
        sendCommand(AnwesenheitSandra, OFF)
    } else if (LocationSandra_i360.state == "Wohnort") {
        logInfo("Life360","Sandra ist "+ LocationSandra_i360.state)
        //sendTelegram("bot1", "Sandra ist zuhause sagt Life360")
	    sendCommand(AnwesenheitSandra, ON)
	} else {
        logInfo("Life360","Sandra ist hier angekommen: "+ LocationSandra_i360.state)
        //sendTelegram("bot1", "Sandra ist hier angekommen: "+ LocationSandra_i360.state)
        sendCommand(AnwesenheitSandra, OFF)
    }
    
end

rule "Tilman angekommen"
when
    Item LocationTilman_i360 changed
then
    if (LocationTilman_i360.state == "unterwegs") {
	    logInfo("Life360","Tilman ist unterwegs")
        sendCommand(AnwesenheitTilman, OFF)
    } else if (LocationTilman_i360.state == "Wohnort") {
        logInfo("Life360","Tilman ist "+ LocationTilman_i360.state)
        //sendTelegram("bot1", "Tilman ist zuhause sagt Life360")
	    sendCommand(AnwesenheitTilman, ON)
	} else {
        logInfo("Life360","Tilman ist hier angekommen: "+ LocationTilman_i360.state)
        //sendTelegram("bot1", "Tilman ist hier angekommen: "+ LocationTilman_i360.state)
        sendCommand(AnwesenheitTilman, OFF)
    }
    
end

rule "Tilman gegangen - Licht an"
when
    Item LocationTilman_i360 changed from "Wohnort" to "unterwegs"
    // Time cron "0 */1 * * * ? *" // every 1 minutes
then
    if (now.getHourOfDay >= 6 && now.getHourOfDay < 7) {
        if (gIKEA_DG_Buero_Weiss_Helligkeit.state > 0 || gIKEA_DG_Buero_Farbe_Helligkeit.state > 0) {
	        logInfo("Life360","Tilman ist nicht zuhause, aber sein Licht brennt noch.")
            sendTelegram("bot1", "Tilman ist nicht zuhause, aber sein Licht brennt noch.")
            sendCommand(gIKEA_DG_Buero_Farbe_Helligkeit, OFF)
            sendCommand(gIKEA_DG_Buero_Weiss_Helligkeit, OFF)
        }   
    }
    
end

rule "Convert Life360 JSON from Tim"
  when
    Item Life360_Tim_Json changed 
 then
      // use the transformation service to retrieve the value
    val newValue1 = transform("JSONPATH", "$.locname", Life360_Tim_Json.state.toString)
    val newValue2 = transform("JSONPATH", "$.batt", Life360_Tim_Json.state.toString)
     // post the new value to the Number Item
    LocationTim_i360.postUpdate( newValue1 )
    BatterieTim.postUpdate( newValue2 )
 end

rule "Convert Life360 JSON from Sandra"
  when
    Item Life360_Sandra_Json changed 
 then
    // use the transformation service to retrieve the value
    val newValue1 = transform("JSONPATH", "$.locname", Life360_Sandra_Json.state.toString)
    val newValue2 = transform("JSONPATH", "$.batt", Life360_Sandra_Json.state.toString)

    // post the new value to the Number Item
    LocationSandra_i360.postUpdate( newValue1 )
    BatterieSandra.postUpdate( newValue2 )
 end

rule "Convert Life360 JSON from Tilman"
  when
    Item Life360_Tilman_Json changed 
 then
    // use the transformation service to retrieve the value
    val newValue1 = transform("JSONPATH", "$.locname", Life360_Tilman_Json.state.toString)
    val newValue2 = transform("JSONPATH", "$.batt", Life360_Tilman_Json.state.toString)

    // post the new value to the Number Item
    LocationTilman_i360.postUpdate( newValue1 )
    BatterieTilman.postUpdate( newValue2 )
 end